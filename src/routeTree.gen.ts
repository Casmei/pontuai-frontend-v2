/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CallbackImport } from './routes/callback'
import { Route as StoresImport } from './routes/_stores'
import { Route as LandingImport } from './routes/_landing'
import { Route as StoresIndexImport } from './routes/stores/index'
import { Route as LandingIndexImport } from './routes/_landing/index'
import { Route as StoresCreateImport } from './routes/stores/create'
import { Route as StoresStoreIdImport } from './routes/stores/$storeId'
import { Route as StoresStoreIdIndexImport } from './routes/stores/$storeId/index'
import { Route as StoresStoreIdTransactionsIndexImport } from './routes/stores/$storeId/transactions/index'
import { Route as StoresStoreIdSettingsIndexImport } from './routes/stores/$storeId/settings/index'
import { Route as StoresStoreIdRewardsIndexImport } from './routes/stores/$storeId/rewards/index'
import { Route as StoresStoreIdCustomersIndexImport } from './routes/stores/$storeId/customers/index'
import { Route as StoresStoreIdCustomersCustomerIdIndexImport } from './routes/stores/$storeId/customers/$customerId/index'

// Create/Update Routes

const CallbackRoute = CallbackImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRoute,
} as any)

const StoresRoute = StoresImport.update({
  id: '/_stores',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  id: '/_landing',
  getParentRoute: () => rootRoute,
} as any)

const StoresIndexRoute = StoresIndexImport.update({
  id: '/stores/',
  path: '/stores/',
  getParentRoute: () => rootRoute,
} as any)

const LandingIndexRoute = LandingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LandingRoute,
} as any)

const StoresCreateRoute = StoresCreateImport.update({
  id: '/stores/create',
  path: '/stores/create',
  getParentRoute: () => rootRoute,
} as any)

const StoresStoreIdRoute = StoresStoreIdImport.update({
  id: '/stores/$storeId',
  path: '/stores/$storeId',
  getParentRoute: () => rootRoute,
} as any)

const StoresStoreIdIndexRoute = StoresStoreIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoresStoreIdRoute,
} as any)

const StoresStoreIdTransactionsIndexRoute =
  StoresStoreIdTransactionsIndexImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => StoresStoreIdRoute,
  } as any)

const StoresStoreIdSettingsIndexRoute = StoresStoreIdSettingsIndexImport.update(
  {
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => StoresStoreIdRoute,
  } as any,
)

const StoresStoreIdRewardsIndexRoute = StoresStoreIdRewardsIndexImport.update({
  id: '/rewards/',
  path: '/rewards/',
  getParentRoute: () => StoresStoreIdRoute,
} as any)

const StoresStoreIdCustomersIndexRoute =
  StoresStoreIdCustomersIndexImport.update({
    id: '/customers/',
    path: '/customers/',
    getParentRoute: () => StoresStoreIdRoute,
  } as any)

const StoresStoreIdCustomersCustomerIdIndexRoute =
  StoresStoreIdCustomersCustomerIdIndexImport.update({
    id: '/customers/$customerId/',
    path: '/customers/$customerId/',
    getParentRoute: () => StoresStoreIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/_stores': {
      id: '/_stores'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StoresImport
      parentRoute: typeof rootRoute
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackImport
      parentRoute: typeof rootRoute
    }
    '/stores/$storeId': {
      id: '/stores/$storeId'
      path: '/stores/$storeId'
      fullPath: '/stores/$storeId'
      preLoaderRoute: typeof StoresStoreIdImport
      parentRoute: typeof rootRoute
    }
    '/stores/create': {
      id: '/stores/create'
      path: '/stores/create'
      fullPath: '/stores/create'
      preLoaderRoute: typeof StoresCreateImport
      parentRoute: typeof rootRoute
    }
    '/_landing/': {
      id: '/_landing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingIndexImport
      parentRoute: typeof LandingImport
    }
    '/stores/': {
      id: '/stores/'
      path: '/stores'
      fullPath: '/stores'
      preLoaderRoute: typeof StoresIndexImport
      parentRoute: typeof rootRoute
    }
    '/stores/$storeId/': {
      id: '/stores/$storeId/'
      path: '/'
      fullPath: '/stores/$storeId/'
      preLoaderRoute: typeof StoresStoreIdIndexImport
      parentRoute: typeof StoresStoreIdImport
    }
    '/stores/$storeId/customers/': {
      id: '/stores/$storeId/customers/'
      path: '/customers'
      fullPath: '/stores/$storeId/customers'
      preLoaderRoute: typeof StoresStoreIdCustomersIndexImport
      parentRoute: typeof StoresStoreIdImport
    }
    '/stores/$storeId/rewards/': {
      id: '/stores/$storeId/rewards/'
      path: '/rewards'
      fullPath: '/stores/$storeId/rewards'
      preLoaderRoute: typeof StoresStoreIdRewardsIndexImport
      parentRoute: typeof StoresStoreIdImport
    }
    '/stores/$storeId/settings/': {
      id: '/stores/$storeId/settings/'
      path: '/settings'
      fullPath: '/stores/$storeId/settings'
      preLoaderRoute: typeof StoresStoreIdSettingsIndexImport
      parentRoute: typeof StoresStoreIdImport
    }
    '/stores/$storeId/transactions/': {
      id: '/stores/$storeId/transactions/'
      path: '/transactions'
      fullPath: '/stores/$storeId/transactions'
      preLoaderRoute: typeof StoresStoreIdTransactionsIndexImport
      parentRoute: typeof StoresStoreIdImport
    }
    '/stores/$storeId/customers/$customerId/': {
      id: '/stores/$storeId/customers/$customerId/'
      path: '/customers/$customerId'
      fullPath: '/stores/$storeId/customers/$customerId'
      preLoaderRoute: typeof StoresStoreIdCustomersCustomerIdIndexImport
      parentRoute: typeof StoresStoreIdImport
    }
  }
}

// Create and export the route tree

interface LandingRouteChildren {
  LandingIndexRoute: typeof LandingIndexRoute
}

const LandingRouteChildren: LandingRouteChildren = {
  LandingIndexRoute: LandingIndexRoute,
}

const LandingRouteWithChildren =
  LandingRoute._addFileChildren(LandingRouteChildren)

interface StoresStoreIdRouteChildren {
  StoresStoreIdIndexRoute: typeof StoresStoreIdIndexRoute
  StoresStoreIdCustomersIndexRoute: typeof StoresStoreIdCustomersIndexRoute
  StoresStoreIdRewardsIndexRoute: typeof StoresStoreIdRewardsIndexRoute
  StoresStoreIdSettingsIndexRoute: typeof StoresStoreIdSettingsIndexRoute
  StoresStoreIdTransactionsIndexRoute: typeof StoresStoreIdTransactionsIndexRoute
  StoresStoreIdCustomersCustomerIdIndexRoute: typeof StoresStoreIdCustomersCustomerIdIndexRoute
}

const StoresStoreIdRouteChildren: StoresStoreIdRouteChildren = {
  StoresStoreIdIndexRoute: StoresStoreIdIndexRoute,
  StoresStoreIdCustomersIndexRoute: StoresStoreIdCustomersIndexRoute,
  StoresStoreIdRewardsIndexRoute: StoresStoreIdRewardsIndexRoute,
  StoresStoreIdSettingsIndexRoute: StoresStoreIdSettingsIndexRoute,
  StoresStoreIdTransactionsIndexRoute: StoresStoreIdTransactionsIndexRoute,
  StoresStoreIdCustomersCustomerIdIndexRoute:
    StoresStoreIdCustomersCustomerIdIndexRoute,
}

const StoresStoreIdRouteWithChildren = StoresStoreIdRoute._addFileChildren(
  StoresStoreIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof StoresRoute
  '/callback': typeof CallbackRoute
  '/stores/$storeId': typeof StoresStoreIdRouteWithChildren
  '/stores/create': typeof StoresCreateRoute
  '/': typeof LandingIndexRoute
  '/stores': typeof StoresIndexRoute
  '/stores/$storeId/': typeof StoresStoreIdIndexRoute
  '/stores/$storeId/customers': typeof StoresStoreIdCustomersIndexRoute
  '/stores/$storeId/rewards': typeof StoresStoreIdRewardsIndexRoute
  '/stores/$storeId/settings': typeof StoresStoreIdSettingsIndexRoute
  '/stores/$storeId/transactions': typeof StoresStoreIdTransactionsIndexRoute
  '/stores/$storeId/customers/$customerId': typeof StoresStoreIdCustomersCustomerIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof StoresRoute
  '/callback': typeof CallbackRoute
  '/stores/create': typeof StoresCreateRoute
  '/': typeof LandingIndexRoute
  '/stores': typeof StoresIndexRoute
  '/stores/$storeId': typeof StoresStoreIdIndexRoute
  '/stores/$storeId/customers': typeof StoresStoreIdCustomersIndexRoute
  '/stores/$storeId/rewards': typeof StoresStoreIdRewardsIndexRoute
  '/stores/$storeId/settings': typeof StoresStoreIdSettingsIndexRoute
  '/stores/$storeId/transactions': typeof StoresStoreIdTransactionsIndexRoute
  '/stores/$storeId/customers/$customerId': typeof StoresStoreIdCustomersCustomerIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_landing': typeof LandingRouteWithChildren
  '/_stores': typeof StoresRoute
  '/callback': typeof CallbackRoute
  '/stores/$storeId': typeof StoresStoreIdRouteWithChildren
  '/stores/create': typeof StoresCreateRoute
  '/_landing/': typeof LandingIndexRoute
  '/stores/': typeof StoresIndexRoute
  '/stores/$storeId/': typeof StoresStoreIdIndexRoute
  '/stores/$storeId/customers/': typeof StoresStoreIdCustomersIndexRoute
  '/stores/$storeId/rewards/': typeof StoresStoreIdRewardsIndexRoute
  '/stores/$storeId/settings/': typeof StoresStoreIdSettingsIndexRoute
  '/stores/$storeId/transactions/': typeof StoresStoreIdTransactionsIndexRoute
  '/stores/$storeId/customers/$customerId/': typeof StoresStoreIdCustomersCustomerIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/callback'
    | '/stores/$storeId'
    | '/stores/create'
    | '/'
    | '/stores'
    | '/stores/$storeId/'
    | '/stores/$storeId/customers'
    | '/stores/$storeId/rewards'
    | '/stores/$storeId/settings'
    | '/stores/$storeId/transactions'
    | '/stores/$storeId/customers/$customerId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/callback'
    | '/stores/create'
    | '/'
    | '/stores'
    | '/stores/$storeId'
    | '/stores/$storeId/customers'
    | '/stores/$storeId/rewards'
    | '/stores/$storeId/settings'
    | '/stores/$storeId/transactions'
    | '/stores/$storeId/customers/$customerId'
  id:
    | '__root__'
    | '/_landing'
    | '/_stores'
    | '/callback'
    | '/stores/$storeId'
    | '/stores/create'
    | '/_landing/'
    | '/stores/'
    | '/stores/$storeId/'
    | '/stores/$storeId/customers/'
    | '/stores/$storeId/rewards/'
    | '/stores/$storeId/settings/'
    | '/stores/$storeId/transactions/'
    | '/stores/$storeId/customers/$customerId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LandingRoute: typeof LandingRouteWithChildren
  StoresRoute: typeof StoresRoute
  CallbackRoute: typeof CallbackRoute
  StoresStoreIdRoute: typeof StoresStoreIdRouteWithChildren
  StoresCreateRoute: typeof StoresCreateRoute
  StoresIndexRoute: typeof StoresIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LandingRoute: LandingRouteWithChildren,
  StoresRoute: StoresRoute,
  CallbackRoute: CallbackRoute,
  StoresStoreIdRoute: StoresStoreIdRouteWithChildren,
  StoresCreateRoute: StoresCreateRoute,
  StoresIndexRoute: StoresIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_landing",
        "/_stores",
        "/callback",
        "/stores/$storeId",
        "/stores/create",
        "/stores/"
      ]
    },
    "/_landing": {
      "filePath": "_landing.tsx",
      "children": [
        "/_landing/"
      ]
    },
    "/_stores": {
      "filePath": "_stores.tsx"
    },
    "/callback": {
      "filePath": "callback.tsx"
    },
    "/stores/$storeId": {
      "filePath": "stores/$storeId.tsx",
      "children": [
        "/stores/$storeId/",
        "/stores/$storeId/customers/",
        "/stores/$storeId/rewards/",
        "/stores/$storeId/settings/",
        "/stores/$storeId/transactions/",
        "/stores/$storeId/customers/$customerId/"
      ]
    },
    "/stores/create": {
      "filePath": "stores/create.tsx"
    },
    "/_landing/": {
      "filePath": "_landing/index.tsx",
      "parent": "/_landing"
    },
    "/stores/": {
      "filePath": "stores/index.tsx"
    },
    "/stores/$storeId/": {
      "filePath": "stores/$storeId/index.tsx",
      "parent": "/stores/$storeId"
    },
    "/stores/$storeId/customers/": {
      "filePath": "stores/$storeId/customers/index.tsx",
      "parent": "/stores/$storeId"
    },
    "/stores/$storeId/rewards/": {
      "filePath": "stores/$storeId/rewards/index.tsx",
      "parent": "/stores/$storeId"
    },
    "/stores/$storeId/settings/": {
      "filePath": "stores/$storeId/settings/index.tsx",
      "parent": "/stores/$storeId"
    },
    "/stores/$storeId/transactions/": {
      "filePath": "stores/$storeId/transactions/index.tsx",
      "parent": "/stores/$storeId"
    },
    "/stores/$storeId/customers/$customerId/": {
      "filePath": "stores/$storeId/customers/$customerId/index.tsx",
      "parent": "/stores/$storeId"
    }
  }
}
ROUTE_MANIFEST_END */
