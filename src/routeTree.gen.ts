/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StoresImport } from './routes/stores'
import { Route as CallbackImport } from './routes/callback'
import { Route as LandingImport } from './routes/_landing'
import { Route as StoresIndexImport } from './routes/stores/index'
import { Route as LandingIndexImport } from './routes/_landing/index'
import { Route as StoresCreateImport } from './routes/stores/create'
import { Route as StoresStoreIdImport } from './routes/stores/$storeId'

// Create/Update Routes

const StoresRoute = StoresImport.update({
  id: '/stores',
  path: '/stores',
  getParentRoute: () => rootRoute,
} as any)

const CallbackRoute = CallbackImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  id: '/_landing',
  getParentRoute: () => rootRoute,
} as any)

const StoresIndexRoute = StoresIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoresRoute,
} as any)

const LandingIndexRoute = LandingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LandingRoute,
} as any)

const StoresCreateRoute = StoresCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => StoresRoute,
} as any)

const StoresStoreIdRoute = StoresStoreIdImport.update({
  id: '/$storeId',
  path: '/$storeId',
  getParentRoute: () => StoresRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackImport
      parentRoute: typeof rootRoute
    }
    '/stores': {
      id: '/stores'
      path: '/stores'
      fullPath: '/stores'
      preLoaderRoute: typeof StoresImport
      parentRoute: typeof rootRoute
    }
    '/stores/$storeId': {
      id: '/stores/$storeId'
      path: '/$storeId'
      fullPath: '/stores/$storeId'
      preLoaderRoute: typeof StoresStoreIdImport
      parentRoute: typeof StoresImport
    }
    '/stores/create': {
      id: '/stores/create'
      path: '/create'
      fullPath: '/stores/create'
      preLoaderRoute: typeof StoresCreateImport
      parentRoute: typeof StoresImport
    }
    '/_landing/': {
      id: '/_landing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingIndexImport
      parentRoute: typeof LandingImport
    }
    '/stores/': {
      id: '/stores/'
      path: '/'
      fullPath: '/stores/'
      preLoaderRoute: typeof StoresIndexImport
      parentRoute: typeof StoresImport
    }
  }
}

// Create and export the route tree

interface LandingRouteChildren {
  LandingIndexRoute: typeof LandingIndexRoute
}

const LandingRouteChildren: LandingRouteChildren = {
  LandingIndexRoute: LandingIndexRoute,
}

const LandingRouteWithChildren =
  LandingRoute._addFileChildren(LandingRouteChildren)

interface StoresRouteChildren {
  StoresStoreIdRoute: typeof StoresStoreIdRoute
  StoresCreateRoute: typeof StoresCreateRoute
  StoresIndexRoute: typeof StoresIndexRoute
}

const StoresRouteChildren: StoresRouteChildren = {
  StoresStoreIdRoute: StoresStoreIdRoute,
  StoresCreateRoute: StoresCreateRoute,
  StoresIndexRoute: StoresIndexRoute,
}

const StoresRouteWithChildren =
  StoresRoute._addFileChildren(StoresRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LandingRouteWithChildren
  '/callback': typeof CallbackRoute
  '/stores': typeof StoresRouteWithChildren
  '/stores/$storeId': typeof StoresStoreIdRoute
  '/stores/create': typeof StoresCreateRoute
  '/': typeof LandingIndexRoute
  '/stores/': typeof StoresIndexRoute
}

export interface FileRoutesByTo {
  '/callback': typeof CallbackRoute
  '/stores/$storeId': typeof StoresStoreIdRoute
  '/stores/create': typeof StoresCreateRoute
  '/': typeof LandingIndexRoute
  '/stores': typeof StoresIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_landing': typeof LandingRouteWithChildren
  '/callback': typeof CallbackRoute
  '/stores': typeof StoresRouteWithChildren
  '/stores/$storeId': typeof StoresStoreIdRoute
  '/stores/create': typeof StoresCreateRoute
  '/_landing/': typeof LandingIndexRoute
  '/stores/': typeof StoresIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/callback'
    | '/stores'
    | '/stores/$storeId'
    | '/stores/create'
    | '/'
    | '/stores/'
  fileRoutesByTo: FileRoutesByTo
  to: '/callback' | '/stores/$storeId' | '/stores/create' | '/' | '/stores'
  id:
    | '__root__'
    | '/_landing'
    | '/callback'
    | '/stores'
    | '/stores/$storeId'
    | '/stores/create'
    | '/_landing/'
    | '/stores/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LandingRoute: typeof LandingRouteWithChildren
  CallbackRoute: typeof CallbackRoute
  StoresRoute: typeof StoresRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LandingRoute: LandingRouteWithChildren,
  CallbackRoute: CallbackRoute,
  StoresRoute: StoresRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_landing",
        "/callback",
        "/stores"
      ]
    },
    "/_landing": {
      "filePath": "_landing.tsx",
      "children": [
        "/_landing/"
      ]
    },
    "/callback": {
      "filePath": "callback.tsx"
    },
    "/stores": {
      "filePath": "stores.tsx",
      "children": [
        "/stores/$storeId",
        "/stores/create",
        "/stores/"
      ]
    },
    "/stores/$storeId": {
      "filePath": "stores/$storeId.tsx",
      "parent": "/stores"
    },
    "/stores/create": {
      "filePath": "stores/create.tsx",
      "parent": "/stores"
    },
    "/_landing/": {
      "filePath": "_landing/index.tsx",
      "parent": "/_landing"
    },
    "/stores/": {
      "filePath": "stores/index.tsx",
      "parent": "/stores"
    }
  }
}
ROUTE_MANIFEST_END */
