/* tslint:disable */
/* eslint-disable */
/**
 * Pontuaí
 * The Pontuaí API experience :)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RewardResponse } from './RewardResponse';
import {
    RewardResponseFromJSON,
    RewardResponseFromJSONTyped,
    RewardResponseToJSON,
    RewardResponseToJSONTyped,
} from './RewardResponse';
import type { CustomerResponse } from './CustomerResponse';
import {
    CustomerResponseFromJSON,
    CustomerResponseFromJSONTyped,
    CustomerResponseToJSON,
    CustomerResponseToJSONTyped,
} from './CustomerResponse';

/**
 * 
 * @export
 * @interface TransactionResponse
 */
export interface TransactionResponse {
    /**
     * The unique identifier of the transaction
     * @type {string}
     * @memberof TransactionResponse
     */
    id: string;
    /**
     * The type of transaction (input or output)
     * @type {string}
     * @memberof TransactionResponse
     */
    type: string;
    /**
     * The number of points for the transaction
     * @type {number}
     * @memberof TransactionResponse
     */
    points: number;
    /**
     * The monetary value associated (if any)
     * @type {object}
     * @memberof TransactionResponse
     */
    value: object | null;
    /**
     * Date when the transaction was created
     * @type {string}
     * @memberof TransactionResponse
     */
    createdAt: string;
    /**
     * Date when the transaction was last updated
     * @type {string}
     * @memberof TransactionResponse
     */
    updatedAt: string;
    /**
     * The customer associated with the transaction
     * @type {CustomerResponse}
     * @memberof TransactionResponse
     */
    customer: CustomerResponse;
    /**
     * The reward associated with the transaction (only if type is output)
     * @type {RewardResponse}
     * @memberof TransactionResponse
     */
    reward: RewardResponse | null;
}

/**
 * Check if a given object implements the TransactionResponse interface.
 */
export function instanceOfTransactionResponse(value: object): value is TransactionResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('points' in value) || value['points'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('customer' in value) || value['customer'] === undefined) return false;
    if (!('reward' in value) || value['reward'] === undefined) return false;
    return true;
}

export function TransactionResponseFromJSON(json: any): TransactionResponse {
    return TransactionResponseFromJSONTyped(json, false);
}

export function TransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'points': json['points'],
        'value': json['value'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'customer': CustomerResponseFromJSON(json['customer']),
        'reward': RewardResponseFromJSON(json['reward']),
    };
}

export function TransactionResponseToJSON(json: any): TransactionResponse {
    return TransactionResponseToJSONTyped(json, false);
}

export function TransactionResponseToJSONTyped(value?: TransactionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'points': value['points'],
        'value': value['value'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'customer': CustomerResponseToJSON(value['customer']),
        'reward': RewardResponseToJSON(value['reward']),
    };
}

