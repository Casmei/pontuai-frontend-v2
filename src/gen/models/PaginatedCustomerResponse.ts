/* tslint:disable */
/* eslint-disable */
/**
 * Pontuaí
 * The Pontuaí API experience :)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomerResponse } from './CustomerResponse';
import {
    CustomerResponseFromJSON,
    CustomerResponseFromJSONTyped,
    CustomerResponseToJSON,
    CustomerResponseToJSONTyped,
} from './CustomerResponse';

/**
 * 
 * @export
 * @interface PaginatedCustomerResponse
 */
export interface PaginatedCustomerResponse {
    /**
     * List of customers for the current page
     * @type {Array<CustomerResponse>}
     * @memberof PaginatedCustomerResponse
     */
    customers: Array<CustomerResponse>;
    /**
     * Total number of customers available (all pages)
     * @type {number}
     * @memberof PaginatedCustomerResponse
     */
    totalItems: number;
    /**
     * Current page number
     * @type {number}
     * @memberof PaginatedCustomerResponse
     */
    currentPage: number;
    /**
     * Total number of pages available
     * @type {number}
     * @memberof PaginatedCustomerResponse
     */
    totalPages: number;
}

/**
 * Check if a given object implements the PaginatedCustomerResponse interface.
 */
export function instanceOfPaginatedCustomerResponse(value: object): value is PaginatedCustomerResponse {
    if (!('customers' in value) || value['customers'] === undefined) return false;
    if (!('totalItems' in value) || value['totalItems'] === undefined) return false;
    if (!('currentPage' in value) || value['currentPage'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    return true;
}

export function PaginatedCustomerResponseFromJSON(json: any): PaginatedCustomerResponse {
    return PaginatedCustomerResponseFromJSONTyped(json, false);
}

export function PaginatedCustomerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedCustomerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'customers': ((json['customers'] as Array<any>).map(CustomerResponseFromJSON)),
        'totalItems': json['totalItems'],
        'currentPage': json['currentPage'],
        'totalPages': json['totalPages'],
    };
}

export function PaginatedCustomerResponseToJSON(json: any): PaginatedCustomerResponse {
    return PaginatedCustomerResponseToJSONTyped(json, false);
}

export function PaginatedCustomerResponseToJSONTyped(value?: PaginatedCustomerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'customers': ((value['customers'] as Array<any>).map(CustomerResponseToJSON)),
        'totalItems': value['totalItems'],
        'currentPage': value['currentPage'],
        'totalPages': value['totalPages'],
    };
}

