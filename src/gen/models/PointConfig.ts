/* tslint:disable */
/* eslint-disable */
/**
 * Pontuaí
 * The Pontuaí API experience :)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PointConfig
 */
export interface PointConfig {
    /**
     * Number of points earned for a unit of money spent
     * @type {number}
     * @memberof PointConfig
     */
    pointsForMoneySpent: number;
    /**
     * The number of days before points expire
     * @type {number}
     * @memberof PointConfig
     */
    expirationInDays: number;
    /**
     * Minimum value for win points
     * @type {number}
     * @memberof PointConfig
     */
    minimumValueForWinPoints: number;
}

/**
 * Check if a given object implements the PointConfig interface.
 */
export function instanceOfPointConfig(value: object): value is PointConfig {
    if (!('pointsForMoneySpent' in value) || value['pointsForMoneySpent'] === undefined) return false;
    if (!('expirationInDays' in value) || value['expirationInDays'] === undefined) return false;
    if (!('minimumValueForWinPoints' in value) || value['minimumValueForWinPoints'] === undefined) return false;
    return true;
}

export function PointConfigFromJSON(json: any): PointConfig {
    return PointConfigFromJSONTyped(json, false);
}

export function PointConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'pointsForMoneySpent': json['pointsForMoneySpent'],
        'expirationInDays': json['expirationInDays'],
        'minimumValueForWinPoints': json['minimumValueForWinPoints'],
    };
}

export function PointConfigToJSON(json: any): PointConfig {
    return PointConfigToJSONTyped(json, false);
}

export function PointConfigToJSONTyped(value?: PointConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pointsForMoneySpent': value['pointsForMoneySpent'],
        'expirationInDays': value['expirationInDays'],
        'minimumValueForWinPoints': value['minimumValueForWinPoints'],
    };
}

